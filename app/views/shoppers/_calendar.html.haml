-content_for :js_includes do
  = javascript_include_tag "shopper/shopper.js"
%div#loader.hidden
  =image_tag "ajax-loader-circle-ball.gif"
%table.table.table-bordered.calendar-table
  %tr
    %th
    -ShoppingTime.days.each do |day|
      %th
        =day
  -ShoppingTime.times.each do |time|
    %tr
      %td
        =time
      -ShoppingTime.days.each do |day|
        %td{class: (!availability[day].nil? && availability[day][time]) ? 'calendar-available' : 'calendar-unavailable' }
          -unless calendar[day].nil?
            -calendar[day][time].nil? ? nil : calendar[day][time].each do |st|
              %div
                %p
                  - if current_user.is_admin?
                    %div.btn-group
                      %button.btn.btn-xs.btn-default.dropdown-toggle{type:"button", :"data-toggle" => "dropdown"}
                        %span.caret
                      %ul.dropdown-menu{role:"menu"}
                        %li
                          =link_to 'View', customer_path(st.customer)
                        %li
                          =link_to 'Edit', edit_customer_path(st.customer)
                  =st.customer.name
                  -unless shopper
                    ="(#{link_to st.customer.shopper.name, shopper_path(st.customer.shopper)})".html_safe
          -unless shopper
            -if !availability[day].nil? && availability[day][time]
              %p
                Available:
                =availability[day][time].map{|s| link_to s.name, shopper_path(s)}.join(', ').html_safe
          -if current_user.is_shopper? && shopper
            -link_text = !availability[day].nil? && availability[day][time] ? "Mark Unavailable" : "Mark Available"
            =link_to link_text, shopper_toggle_availability_path(id: shopper.id, day: day, time: time), :"data-day" => day, :"data-time" => time, class: 'js-toggle-available'
